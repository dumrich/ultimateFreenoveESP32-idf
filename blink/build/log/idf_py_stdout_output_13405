[1/10] Performing build step for 'bootloader'
[1/1] cd /home/chabi/esp/blink/build/bootloader/esp-idf/esptool_py && /home/chabi/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/chabi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/chabi/esp/blink/build/bootloader/bootloader.bin
Bootloader binary size 0x6920 bytes. 0x6e0 bytes (6%) free.
[2/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink.c.obj
[3/10] No install step for 'bootloader'
[4/10] Linking C static library esp-idf/main/libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/blink.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable blink.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/chabi/esp/blink/build/blink.bin
[10/10] cd /home/chabi/esp/blink/build/esp-idf/esptool_py && /home/chabi/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/chabi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/chabi/esp/blink/build/partition_table/partition-table.bin /home/chabi/esp/blink/build/blink.bin
blink.bin binary size 0x2bd10 bytes. Smallest app partition is 0x100000 bytes. 0xd42f0 bytes (83%) free.
